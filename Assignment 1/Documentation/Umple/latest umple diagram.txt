interface model.Card {
  String toString();
}




class model.CharacterCard {
  isA model.Card;
  
  String characterName;
  String characterBoardChar;
}




class model.RoomCard {
  isA model.Card;
  
  String roomName;
  model.Room room;
  
  
}




class model.WeaponCard {
  isA model.Card;
  
  String weaponString;
  model.Room room;
}



class model.Scenario {
  model.RoomCard roomCard;
  model.WeaponCard weaponCard;
  model.CharacterCard murdererCard;
  
  

  
  public boolean equals(Object o){
  }
}

class model.Room {
  String roomName;
  String roomChar;
}

class model.Position {
  model.CharacterCard character;
  String displayName;
  boolean canMove;
  int xLoc;
  int yLoc;
  
  model.Room inRoom;
  MoveDirection doorDirection;
  boolean isDoor;
  boolean passableTile;
  
  public model.Position clone(){
  }
  
  public boolean canMove(){
  }
  
  public boolean isDoor(){
  }
  
  public boolean isPassableTile(){
  }
}


class model.Player {
   model.Card[] hand;
   model.CharacterCard character;
   model.Position currentPosition;
  
   boolean canAccuse;
   boolean canRefute;
}


class model.Move {
  Direction direction;
  int spaces;
  
  public int xChange(){
  }
  
  public int yChange(){
  }
}

class model.Board {
  model.Position[] positions;
  
  public model.Board apply(model.Player player, model.Move move){
  }
  
  public model.Board teleportPlayer(model.Player player, model.Room room){
  }
  
  public boolean outOfBounds(int x,int y){
  }
  
  public boolean checkDoorMovement(model.Position checkPosition, int dx,int dy,boolean enter){
  }
}


class model.Game {
  model.Card[] deck;
  model.Player[] players;
  model.Room[] rooms;
  
  model.WeaponCard[] weaponCards;
  model.RoomCard[] roomCards;
  model.CharacterCard[] characterCards;
  
  Map weaponCardsMap;
  Map roomCardsMap;
  Map characterCardsMap;
  
  model.Board board;
  model.Player currentPlayer;
  model.Scenario murderScenario;
  
  int movesRemaining;
  
  String[] weaponNames;
  String[] roomNames;
  String[] characterNames;
  
  public static void main(String[] args){
  }
  
  public void initGame() {
  }
  
  public void dealCards() {
  }
  
  private void initDeck(int numPlayers) {
  }
  
  private void initBoard(String boardLayout) {
  }
  
  public void mainGameLoop() {
  }
  
  public int rollDice() {
  }
  
  public model.Move movementInput(int movesRemaining) {
  }
  
  private int makeAccusation(model.Player p) {
  }
  
  private void makeSuggestion(model.Player p) {
  }
  
  private String suggestionValidateInput() {
  }
  
}
//$?[End_of_model]$?

namespace -;


class model.CharacterCard
{
  position 56 192 109 61;
}

class model.RoomCard
{
  position 315 191 157 112;
}

class model.WeaponCard
{
  position 536 209 109 61;
}

class model.Scenario
{
  position 50 330 225 112;
}

class model.Room
{
  position 304 333 149 95;
}

class model.Position
{
  position 808 168 109 61;
}

class model.Player
{
  position 88 503 109 78;
}

class model.CharacterCard
{
  position 56 192 109 61;
}

class model.RoomCard
{
  position 315 191 157 112;
}

class model.WeaponCard
{
  position 536 209 109 61;
}

class model.Scenario
{
  position 50 330 225 112;
}

class model.Room
{
  position 304 333 149 95;
}

class model.Position
{
  position 808 168 109 61;
}

class model.Player
{
  position 88 503 109 78;
}

class model.Move
{
  position 324 505 153 129;
}

class model.Board
{
  position 569 499 408 146;
}

class model.CharacterCard
{
  position 56 192 109 61;
}

class model.RoomCard
{
  position 315 191 157 112;
}

class model.WeaponCard
{
  position 536 209 109 61;
}

class model.Scenario
{
  position 50 330 225 112;
}

class model.Room
{
  position 304 333 149 95;
}

class model.Position
{
  position 808 168 109 61;
}

class model.Player
{
  position 88 503 109 78;
}

class model.Move
{
  position 324 505 153 129;
}

class model.Board
{
  position 569 499 408 146;
}

class model.Game
{
  position 82 672 244 333;
}