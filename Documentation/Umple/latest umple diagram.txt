interface Card {
  String toString();
}




class CharacterCard {
  isA Card;
  
  String characterName;
  String characterBoardChar;
}




class RoomCard {
  isA Card;
  
  String roomName;
  Room room;
  
  
}




class WeaponCard {
  isA Card;
  
  String weaponString;
  Room room;
}



class Scenario {
  RoomCard roomCard;
  WeaponCard weaponCard;
  CharacterCard murdererCard;
  
  

  
  public boolean equals(Object o){
  }
}

class Room {
  String roomName;
  String roomChar;
}

class Position {
  CharacterCard character;
  String displayName;
  boolean canMove;
  int xLoc;
  int yLoc;
  
  Room inRoom;
  MoveDirection doorDirection;
  boolean isDoor;
  boolean passableTile;
  
  public Position clone(){
  }
  
  public boolean canMove(){
  }
  
  public boolean isDoor(){
  }
  
  public boolean isPassableTile(){
  }
}


class Player {
   Card[] hand;  
   CharacterCard character;
   Position currentPosition;
  
   boolean canAccuse;
   boolean canRefute;
}


class Move {
  Direction direction;
  int spaces;
  
  public int xChange(){
  }
  
  public int yChange(){
  }
}

class Board {
  Position[] positions;
  
  public Board apply(Player player, Move move){
  }
  
  public Board teleportPlayer(Player player, Room room){
  }
  
  public boolean outOfBounds(int x,int y){
  }
  
  public boolean checkDoorMovement(Position checkPosition, int dx,int dy,boolean enter){
  }
}


class Game {
  Card[] deck;
  Player[] players;
  Room[] rooms;
  
  WeaponCard[] weaponCards;
  RoomCard[] roomCards;
  CharacterCard[] characterCards;
  
  Map weaponCardsMap;
  Map roomCardsMap;
  Map characterCardsMap;
  
  Board board;
  Player currentPlayer;
  Scenario murderScenario;
  
  int movesRemaining;
  
  String[] weaponNames;
  String[] roomNames;
  String[] characterNames;
  
  public static void main(String[] args){
  }
  
  public void initGame() {
  }
  
  public void dealCards() {
  }
  
  private void initDeck(int numPlayers) {
  }
  
  private void initBoard(String boardLayout) {
  }
  
  public void mainGameLoop() {
  }
  
  public int rollDice() {
  }
  
  public Move movementInput(int movesRemaining) {
  }
  
  private int makeAccusation(Player p) {
  }
  
  private void makeSuggestion(Player p) {
  }
  
  private String suggestionValidateInput() {
  }
  
}
//$?[End_of_model]$?

namespace -;


class CharacterCard
{
  position 56 192 109 61;
}

class RoomCard
{
  position 315 191 157 112;
}

class WeaponCard
{
  position 536 209 109 61;
}

class Scenario
{
  position 50 330 225 112;
}

class Room
{
  position 304 333 149 95;
}

class Position
{
  position 808 168 109 61;
}

class Player
{
  position 88 503 109 78;
}

class CharacterCard
{
  position 56 192 109 61;
}

class RoomCard
{
  position 315 191 157 112;
}

class WeaponCard
{
  position 536 209 109 61;
}

class Scenario
{
  position 50 330 225 112;
}

class Room
{
  position 304 333 149 95;
}

class Position
{
  position 808 168 109 61;
}

class Player
{
  position 88 503 109 78;
}

class Move
{
  position 324 505 153 129;
}

class Board
{
  position 569 499 408 146;
}

class CharacterCard
{
  position 56 192 109 61;
}

class RoomCard
{
  position 315 191 157 112;
}

class WeaponCard
{
  position 536 209 109 61;
}

class Scenario
{
  position 50 330 225 112;
}

class Room
{
  position 304 333 149 95;
}

class Position
{
  position 808 168 109 61;
}

class Player
{
  position 88 503 109 78;
}

class Move
{
  position 324 505 153 129;
}

class Board
{
  position 569 499 408 146;
}

class Game
{
  position 82 672 244 333;
}